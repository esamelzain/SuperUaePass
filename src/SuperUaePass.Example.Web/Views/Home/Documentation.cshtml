@{
    ViewData["Title"] = "Documentation";
}

<div class="docs-container">
    <!-- Sidebar -->
    <nav class="docs-sidebar">
        <div class="sidebar-header">
            <h4>Documentation</h4>
        </div>
        <ul class="sidebar-nav">
            <li><a href="#overview" class="sidebar-link">Overview</a></li>
            <li><a href="#quick-start" class="sidebar-link">Quick Start</a></li>
            <li><a href="#configuration" class="sidebar-link">Configuration</a></li>
            <li><a href="#environments" class="sidebar-link">Environments</a></li>
            <li><a href="#integration-flow" class="sidebar-link">Integration Flow</a></li>
            <li><a href="#browser-auth" class="sidebar-link">Browser Authentication</a></li>
            <li><a href="#security" class="sidebar-link">Security</a></li>
            <li><a href="#api-reference" class="sidebar-link">API Reference</a></li>
        </ul>
    </nav>

    <!-- Main Content -->
    <main class="docs-main">
        <div class="docs-content">
            <!-- Overview -->
            <section id="overview" class="docs-section">
                <h2>Overview</h2>
                <p>SuperUaePass is a professional .NET library for integrating UAE Pass authentication into your applications. It provides a clean, secure, and easy-to-use interface for OAuth 2.0 authentication with UAE Pass.</p>
                
                <div class="alert alert-info">
                    <strong>Official Compliance:</strong> This library is built according to the 
                    <a href="https://docs.uaepass.ae/feature-guides/authentication/web-application" target="_blank" rel="noopener">official UAE Pass documentation</a>.
                </div>
            </section>

            <!-- Quick Start -->
            <section id="quick-start" class="docs-section">
                <h2>Quick Start</h2>
                
                <h3>1. Install the Package</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>Package Manager</span>
                        <button class="copy-btn" onclick="copyToClipboard('install-pm')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="install-pm"><code>Install-Package SuperUaePass</code></pre>
                </div>

                <div class="code-block">
                    <div class="code-header">
                        <span>.NET CLI</span>
                        <button class="copy-btn" onclick="copyToClipboard('install-cli')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="install-cli"><code>dotnet add package SuperUaePass</code></pre>
                </div>

                <h3>2. Configure Services</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>Program.cs</span>
                        <button class="copy-btn" onclick="copyToClipboard('program-cs')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="program-cs"><code>using SuperUaePass;

var builder = WebApplication.CreateBuilder(args);

// Add UAE Pass services
builder.Services.AddSuperUaePass(builder.Configuration);

var app = builder.Build();
app.Run();</code></pre>
                </div>

                <h3>3. Add Configuration</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>appsettings.json</span>
                        <button class="copy-btn" onclick="copyToClipboard('appsettings')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="appsettings"><code>{
  "SuperUaePass": {
    "BaseUrl": "https://stg-id.uaepass.ae",
    "ClientId": "your_client_id",
    "ClientSecret": "your_client_secret",
    "RedirectUri": "https://your-domain.com/callback",
    "Scope": "urn:uae:digitalid:profile:general",
    "Environment": "Staging",
    "ResponseType": "code",
    "EnableLogging": true
  }
}</code></pre>
                </div>

                <h3>4. Use in Controller</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>HomeController.cs</span>
                        <button class="copy-btn" onclick="copyToClipboard('controller')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="controller"><code>public class HomeController : Controller
{
    private readonly ISuperUaePassService _uaePassService;

    public HomeController(ISuperUaePassService uaePassService)
    {
        _uaePassService = uaePassService;
    }

    public IActionResult Login()
    {
        var state = Guid.NewGuid().ToString();
        var authUrl = _uaePassService.GenerateAuthorizationUrl(state);
        return Redirect(authUrl);
    }

    public async Task<IActionResult> Callback(string code, string state)
    {
        var tokenResponse = await _uaePassService.ExchangeCodeForTokenAsync(code);
        var userProfile = await _uaePassService.GetUserProfileAsync(tokenResponse.AccessToken);
        
        // Handle user authentication
        return RedirectToAction("Profile");
    }
}</code></pre>
                </div>
            </section>

            <!-- Configuration -->
            <section id="configuration" class="docs-section">
                <h2>Configuration Options</h2>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Property</th>
                                <th>Type</th>
                                <th>Default</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>BaseUrl</code></td>
                                <td>string</td>
                                <td><code>https://stg-id.uaepass.ae</code></td>
                                <td>UAE Pass base URL</td>
                            </tr>
                            <tr>
                                <td><code>ClientId</code></td>
                                <td>string</td>
                                <td>-</td>
                                <td>Your UAE Pass client ID</td>
                            </tr>
                            <tr>
                                <td><code>ClientSecret</code></td>
                                <td>string</td>
                                <td>-</td>
                                <td>Your UAE Pass client secret</td>
                            </tr>
                            <tr>
                                <td><code>RedirectUri</code></td>
                                <td>string</td>
                                <td>-</td>
                                <td>Your application's callback URL</td>
                            </tr>
                            <tr>
                                <td><code>Scope</code></td>
                                <td>string</td>
                                <td><code>urn:uae:digitalid:profile:general</code></td>
                                <td>OAuth 2.0 scope</td>
                            </tr>
                            <tr>
                                <td><code>Environment</code></td>
                                <td>UaePassEnvironment</td>
                                <td><code>Staging</code></td>
                                <td>UAE Pass environment</td>
                            </tr>
                            <tr>
                                <td><code>ResponseType</code></td>
                                <td>string</td>
                                <td><code>code</code></td>
                                <td>OAuth 2.0 response type</td>
                            </tr>
                            <tr>
                                <td><code>EnableLogging</code></td>
                                <td>bool</td>
                                <td><code>false</code></td>
                                <td>Enable detailed logging</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Environments -->
            <section id="environments" class="docs-section">
                <h2>UAE Pass Environments</h2>
                
                <h3>Staging Environment</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>Staging Configuration</span>
                        <button class="copy-btn" onclick="copyToClipboard('staging-config')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="staging-config"><code>{
  "SuperUaePass": {
    "BaseUrl": "https://stg-id.uaepass.ae",
    "Environment": "Staging"
  }
}</code></pre>
                </div>
                <p><strong>Purpose:</strong> For development and testing</p>

                <h3>Production Environment</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>Production Configuration</span>
                        <button class="copy-btn" onclick="copyToClipboard('production-config')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="production-config"><code>{
  "SuperUaePass": {
    "BaseUrl": "https://id.uaepass.ae",
    "Environment": "Production"
  }
}</code></pre>
                </div>
                <p><strong>Purpose:</strong> For live applications</p>
            </section>

            <!-- Integration Flow -->
            <section id="integration-flow" class="docs-section">
                <h2>UAE Pass Integration Flow</h2>
                <ol>
                    <li><strong>Authorization Request:</strong> Redirect user to UAE Pass authorization endpoint</li>
                    <li><strong>User Authentication:</strong> User authenticates with Emirates ID</li>
                    <li><strong>Authorization Code:</strong> UAE Pass returns authorization code to your callback</li>
                    <li><strong>Token Exchange:</strong> Exchange authorization code for access token</li>
                    <li><strong>User Profile:</strong> Retrieve user information using access token</li>
                    <li><strong>Session Management:</strong> Create user session in your application</li>
                </ol>

                <h3>Endpoints</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>UAE Pass Endpoints</span>
                        <button class="copy-btn" onclick="copyToClipboard('endpoints')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="endpoints"><code>Authorization: /idshub/authorize
Token Exchange: /idshub/token
User Info: /idshub/userinfo
Logout: /idshub/logout</code></pre>
                </div>
            </section>

            <!-- Browser Authentication -->
            <section id="browser-auth" class="docs-section">
                <h2>Browser-Based Authentication Flow</h2>
                <p>For browser-based authentication, the client secret is typically skipped, and the authorization endpoint includes specific parameters:</p>

                <div class="code-block">
                    <div class="code-header">
                        <span>Authorization URL Example</span>
                        <button class="copy-btn" onclick="copyToClipboard('auth-url')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="auth-url"><code>https://stg-id.uaepass.ae/idshub/authorize?
response_type=code&
client_id=sandbox_stage&
scope=urn:uae:digitalid:profile:general&
state=HnlHOJTkTb66Y5H&
redirect_uri=https://stg-selfcare.uaepass.ae&
acr_values=urn:safelayer:tws:policies:authentication:level:low</code></pre>
                </div>

                <h3>Important Notes</h3>
                <ul>
                    <li><code>acr_values</code> parameter is required for authentication level</li>
                    <li>Parameters should NOT be URL-encoded</li>
                    <li><code>nonce</code> parameter is optional</li>
                </ul>
            </section>

            <!-- Security -->
            <section id="security" class="docs-section">
                <h2>Security Considerations</h2>
                
                <h3>State Parameter</h3>
                <p>Always use a state parameter to prevent CSRF attacks:</p>
                <div class="code-block">
                    <div class="code-header">
                        <span>State Parameter Example</span>
                        <button class="copy-btn" onclick="copyToClipboard('state-example')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="state-example"><code>var state = Guid.NewGuid().ToString();
HttpContext.Session.SetString("UaePassState", state);

var authUrl = _uaePassService.GenerateAuthorizationUrl(state);</code></pre>
                </div>

                <h3>User Type Validation</h3>
                <p>Validate user types to ensure only authorized users can access your application:</p>
                <div class="code-block">
                    <div class="code-header">
                        <span>User Type Validation</span>
                        <button class="copy-btn" onclick="copyToClipboard('user-validation')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="user-validation"><code>var supportedTypes = new[] { "SOP1", "SOP2", "SOP3" };
if (!_uaePassService.IsUserTypeSupported(userProfile.UserType, supportedTypes))
{
    return BadRequest("User type not supported");
}</code></pre>
                </div>

                <h3>Error Handling</h3>
                <p>Implement proper error handling with correlation IDs:</p>
                <div class="code-block">
                    <div class="code-header">
                        <span>Error Handling Example</span>
                        <button class="copy-btn" onclick="copyToClipboard('error-handling')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="error-handling"><code>try
{
    var tokenResponse = await _uaePassService.ExchangeCodeForTokenAsync(code);
    var userProfile = await _uaePassService.GetUserProfileAsync(tokenResponse.AccessToken);
}
catch (Exception ex)
{
    _logger.LogError(ex, "UAE Pass authentication failed");
    return RedirectToAction("Error", new { error = "Authentication failed" });
}</code></pre>
                </div>
            </section>

            <!-- API Reference -->
            <section id="api-reference" class="docs-section">
                <h2>API Reference</h2>
                
                <h3>ISuperUaePassService</h3>
                
                <h4>GenerateAuthorizationUrl</h4>
                <div class="code-block">
                    <div class="code-header">
                        <span>Method Signature</span>
                        <button class="copy-btn" onclick="copyToClipboard('auth-method')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="auth-method"><code>string GenerateAuthorizationUrl(string state, string? nonce = null, string? prompt = null, string? uiLocales = null)</code></pre>
                </div>

                <h4>ExchangeCodeForTokenAsync</h4>
                <div class="code-block">
                    <div class="code-header">
                        <span>Method Signature</span>
                        <button class="copy-btn" onclick="copyToClipboard('token-method')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="token-method"><code>Task<UaePassTokenResponse> ExchangeCodeForTokenAsync(string code)</code></pre>
                </div>

                <h4>GetUserProfileAsync</h4>
                <div class="code-block">
                    <div class="code-header">
                        <span>Method Signature</span>
                        <button class="copy-btn" onclick="copyToClipboard('profile-method')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="profile-method"><code>Task<UaePassUserProfile> GetUserProfileAsync(string accessToken)</code></pre>
                </div>

                <h4>GenerateLogoutUrl</h4>
                <div class="code-block">
                    <div class="code-header">
                        <span>Method Signature</span>
                        <button class="copy-btn" onclick="copyToClipboard('logout-method')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="logout-method"><code>string GenerateLogoutUrl(string? redirectUri = null)</code></pre>
                </div>

                <h3>UaePassUserProfile DTO</h3>
                <p>The user profile contains the following properties from the UAE Pass response:</p>
                <div class="code-block">
                    <div class="code-header">
                        <span>User Profile Properties</span>
                        <button class="copy-btn" onclick="copyToClipboard('profile-properties')">
                            <i class="fas fa-copy"></i> Copy
                        </button>
                    </div>
                    <pre id="profile-properties"><code>public class UaePassUserProfile
{
    public string? Sub { get; set; }
    public string? Uuid { get; set; }
    public string? UserType { get; set; }
    public string? ProfileType { get; set; }
    public string? Idn { get; set; }
    public string? UnifiedID { get; set; }
    public string? IdType { get; set; }
    public string? Spuuid { get; set; }
    public string? FirstnameEN { get; set; }
    public string? LastnameEN { get; set; }
    public string? FullnameEN { get; set; }
    public string? FirstnameAR { get; set; }
    public string? LastnameAR { get; set; }
    public string? FullnameAR { get; set; }
    public string? TitleEN { get; set; }
    public string? TitleAR { get; set; }
    public string? Email { get; set; }
    public string? Mobile { get; set; }
    public string? Gender { get; set; }
    public string? NationalityEN { get; set; }
    public string? NationalityAR { get; set; }
    public string? Acr { get; set; }
    public string? Amr { get; set; }
    
    // Convenience properties
    public string? EmiratesId => Idn;
    public string? FirstName => FirstnameEN;
    public string? LastName => LastnameEN;
    public string? FullName => FullnameEN;
    public string? PhoneNumber => Mobile;
}</code></pre>
                </div>
            </section>
        </div>
    </main>
</div>

<style>
/* Documentation Layout */
.docs-container {
    display: flex;
    min-height: calc(100vh - 200px);
    margin-top: 2rem;
}

/* Sidebar */
.docs-sidebar {
    width: 280px;
    background: white;
    border-right: 1px solid var(--gray-200);
    padding: 2rem 0;
    position: sticky;
    top: 100px;
    height: calc(100vh - 200px);
    overflow-y: auto;
    flex-shrink: 0;
}

.sidebar-header {
    padding: 0 2rem 1rem;
    border-bottom: 1px solid var(--gray-200);
    margin-bottom: 1rem;
}

.sidebar-header h4 {
    margin: 0;
    color: var(--gray-900);
    font-weight: 600;
}

.sidebar-nav {
    list-style: none;
    padding: 0;
    margin: 0;
}

.sidebar-nav li {
    margin: 0;
}

.sidebar-link {
    display: block;
    padding: 0.75rem 2rem;
    color: var(--gray-600);
    text-decoration: none;
    transition: all 0.2s ease;
    border-left: 3px solid transparent;
}

.sidebar-link:hover {
    color: var(--blue-600);
    background: var(--blue-50);
    border-left-color: var(--blue-600);
}

.sidebar-link.active {
    color: var(--blue-600);
    background: var(--blue-50);
    border-left-color: var(--blue-600);
    font-weight: 500;
}

/* Main Content */
.docs-main {
    flex: 1;
    padding: 0 3rem 3rem;
    max-width: calc(100% - 280px);
}

.docs-content {
    max-width: 800px;
}

.docs-section {
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--gray-200);
}

.docs-section:last-child {
    border-bottom: none;
}

.docs-section h2 {
    color: var(--gray-900);
    font-weight: 700;
    margin-bottom: 1.5rem;
    padding-top: 2rem;
    margin-top: -2rem;
}

.docs-section h3 {
    color: var(--gray-800);
    font-weight: 600;
    margin: 2rem 0 1rem;
}

.docs-section h4 {
    color: var(--gray-800);
    font-weight: 600;
    margin: 1.5rem 0 0.75rem;
}

.docs-section p {
    color: var(--gray-600);
    line-height: 1.7;
    margin-bottom: 1rem;
}

.docs-section ul, .docs-section ol {
    color: var(--gray-600);
    line-height: 1.7;
    margin-bottom: 1rem;
    padding-left: 1.5rem;
}

.docs-section li {
    margin-bottom: 0.5rem;
}

/* Code Blocks */
.code-block {
    background: white;
    border: 1px solid var(--gray-200);
    border-radius: 8px;
    margin: 1.5rem 0;
    overflow: hidden;
    box-shadow: var(--shadow-sm);
}

.code-header {
    background: var(--gray-50);
    padding: 0.75rem 1rem;
    border-bottom: 1px solid var(--gray-200);
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--gray-700);
}

.copy-btn {
    background: var(--blue-600);
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-size: 0.875rem;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.copy-btn:hover {
    background: var(--blue-700);
    transform: translateY(-1px);
}

.copy-btn i {
    font-size: 0.75rem;
}

.code-block pre {
    margin: 0;
    padding: 1.5rem;
    background: var(--gray-900);
    color: var(--gray-100);
    overflow-x: auto;
    font-family: 'Courier New', monospace;
    font-size: 0.875rem;
    line-height: 1.5;
}

.code-block code {
    background: none;
    color: inherit;
    padding: 0;
    border-radius: 0;
}

/* Tables */
.table-responsive {
    overflow-x: auto;
    margin: 1.5rem 0;
}

.table {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: var(--shadow-sm);
}

.table thead th {
    background: var(--gray-50);
    color: var(--gray-700);
    font-weight: 600;
    padding: 1rem;
    border: none;
    border-bottom: 1px solid var(--gray-200);
}

.table tbody td {
    padding: 1rem;
    border: none;
    border-bottom: 1px solid var(--gray-100);
    color: var(--gray-600);
}

.table tbody tr:hover {
    background: var(--gray-50);
}

.table code {
    background: var(--gray-100);
    color: var(--gray-800);
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.875rem;
}

/* Alerts */
.alert {
    border: none;
    border-radius: 8px;
    padding: 1rem 1.25rem;
    margin: 1.5rem 0;
    font-weight: 500;
}

.alert-info {
    background: var(--blue-50);
    color: var(--blue-700);
    border-left: 4px solid var(--blue-600);
}

.alert a {
    color: inherit;
    text-decoration: underline;
}

.alert a:hover {
    text-decoration: none;
}

/* Responsive Design */
@@media (max-width: 1024px) {
    .docs-container {
        flex-direction: column;
    }
    
    .docs-sidebar {
        width: 100%;
        position: static;
        height: auto;
        border-right: none;
        border-bottom: 1px solid var(--gray-200);
        padding: 1rem 0;
    }
    
    .docs-main {
        max-width: 100%;
        padding: 2rem 1rem;
    }
    
    .sidebar-nav {
        display: flex;
        overflow-x: auto;
        padding: 0 1rem;
    }
    
    .sidebar-nav li {
        flex-shrink: 0;
    }
    
    .sidebar-link {
        padding: 0.5rem 1rem;
        border-left: none;
        border-bottom: 2px solid transparent;
        white-space: nowrap;
    }
    
    .sidebar-link:hover,
    .sidebar-link.active {
        border-left-color: transparent;
        border-bottom-color: var(--blue-600);
    }
}

@@media (max-width: 768px) {
    .docs-main {
        padding: 1rem;
    }
    
    .code-block pre {
        padding: 1rem;
        font-size: 0.8rem;
    }
    
    .code-header {
        padding: 0.5rem 1rem;
        font-size: 0.8rem;
    }
    
    .copy-btn {
        padding: 0.4rem 0.8rem;
        font-size: 0.8rem;
    }
}
</style>

<script>
// Copy to clipboard functionality
function copyToClipboard(elementId) {
    const element = document.getElementById(elementId);
    const text = element.textContent;
    
    navigator.clipboard.writeText(text).then(function() {
        // Show success feedback
        const button = element.parentElement.querySelector('.copy-btn');
        const originalText = button.innerHTML;
        button.innerHTML = '<i class="fas fa-check"></i> Copied!';
        button.style.background = 'var(--green-500)';
        
        setTimeout(() => {
            button.innerHTML = originalText;
            button.style.background = 'var(--blue-600)';
        }, 2000);
    }).catch(function(err) {
        console.error('Failed to copy text: ', err);
    });
}

// Smooth scrolling for anchor links
document.addEventListener('DOMContentLoaded', function() {
    const links = document.querySelectorAll('.sidebar-link');
    
    links.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            
            const targetId = this.getAttribute('href').substring(1);
            const targetElement = document.getElementById(targetId);
            
            if (targetElement) {
                targetElement.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
    
    // Highlight active section based on scroll position
    window.addEventListener('scroll', function() {
        const sections = document.querySelectorAll('.docs-section');
        const navLinks = document.querySelectorAll('.sidebar-link');
        
        let current = '';
        
        sections.forEach(section => {
            const sectionTop = section.offsetTop;
            const sectionHeight = section.clientHeight;
            
            if (window.pageYOffset >= sectionTop - 200) {
                current = section.getAttribute('id');
            }
        });
        
        navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('href') === '#' + current) {
                link.classList.add('active');
            }
        });
    });
});
</script>
