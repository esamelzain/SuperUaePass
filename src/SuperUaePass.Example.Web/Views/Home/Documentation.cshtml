@{
    ViewData["Title"] = "Documentation";
}

<!-- Skip to content link for accessibility -->
<a href="#overview" class="skip-link">Skip to main content</a>

<div class="docs-layout">
    <!-- Sticky Sidebar -->
    <aside class="docs-sidebar" id="docsSidebar">
        <div class="sidebar-header">
            <div class="sidebar-brand">
                <i class="fas fa-shield-alt text-primary"></i>
                <span>SuperUaePass</span>
            </div>
            <button class="sidebar-toggle" id="sidebarToggle" aria-label="Toggle sidebar">
                <i class="fas fa-bars"></i>
            </button>
        </div>
        
        <nav class="sidebar-nav">
            <div class="nav-section">
                <h3 class="nav-section-title">Getting Started</h3>
                <ul class="nav-list">
                    <li><a href="#overview" class="nav-link">Overview</a></li>
                    <li><a href="#prerequisites" class="nav-link">Pre-requisites</a></li>
                    <li><a href="#installation" class="nav-link">Installation</a></li>
                    <li><a href="#quick-start" class="nav-link">Quick Start</a></li>
                    <li><a href="#configuration" class="nav-link">Configuration</a></li>
                </ul>
            </div>
            
            <div class="nav-section">
                <h3 class="nav-section-title">Guides</h3>
                <ul class="nav-list">
                    <li><a href="#authentication-flow" class="nav-link">Authentication Flow</a></li>
                    <li><a href="#browser-auth" class="nav-link">Browser Authentication</a></li>
                    <li><a href="#security" class="nav-link">Security</a></li>
                    <li><a href="#error-handling" class="nav-link">Error Handling</a></li>
                </ul>
            </div>
            
            <div class="nav-section">
                <h3 class="nav-section-title">API Reference</h3>
                <ul class="nav-list">
                    <li><a href="#service-interface" class="nav-link">ISuperUaePassService</a></li>
                    <li><a href="#user-profile" class="nav-link">UaePassUserProfile</a></li>
                    <li><a href="#token-response" class="nav-link">UaePassTokenResponse</a></li>
                    <li><a href="#configuration-options" class="nav-link">Configuration Options</a></li>
                </ul>
            </div>
            
            <div class="nav-section">
                <h3 class="nav-section-title">Examples</h3>
                <ul class="nav-list">
                    <li><a href="#basic-integration" class="nav-link">Basic Integration</a></li>
                    <li><a href="#advanced-usage" class="nav-link">Advanced Usage</a></li>
                </ul>
            </div>
        </nav>
    </aside>

    <!-- Main Content -->
    <main class="docs-main">
        <div class="docs-content">
            <!-- Overview -->
            <section id="overview" class="docs-section">
                <div class="section-header">
                    <h1>Overview</h1>
                    <p class="section-description">
                        SuperUaePass is a professional .NET library for integrating UAE Pass authentication into your applications. 
                        It provides a clean, secure, and easy-to-use interface for OAuth 2.0 authentication with UAE Pass.
                    </p>
                </div>
                
                <div class="callout callout-info">
                    <div class="callout-icon">
                        <i class="fas fa-info-circle"></i>
                    </div>
                    <div class="callout-content">
                        <strong>Official Compliance:</strong> This library is built according to the 
                        <a href="https://docs.uaepass.ae/feature-guides/authentication/web-application" target="_blank" rel="noopener">official UAE Pass documentation</a>.
                    </div>
                </div>

                <div class="callout callout-warning">
                    <div class="callout-icon">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                    <div class="callout-content">
                        <strong>Current Scope:</strong> This package currently supports <strong>Web Authentication only</strong>. 
                        <strong>e-Seal</strong> and <strong>Digital Signature</strong> features are coming soon.
                    </div>
                </div>
            </section>

            <!-- Pre-requisites -->
            <section id="prerequisites" class="docs-section">
                <h2>Pre-requisites</h2>
                <p>Before integrating SuperUaePass into your application, ensure you have the following requirements:</p>
                
                <div class="prerequisites-list">
                    <div class="prerequisite-item">
                        <div class="prerequisite-icon">
                            <i class="fas fa-user-check"></i>
                        </div>
                        <div class="prerequisite-content">
                            <h4>Staging Environment Account</h4>
                            <p>Developer/Tester should have a user account created on the UAE Pass staging environment.</p>
                        </div>
                    </div>
                    
                    <div class="prerequisite-item">
                        <div class="prerequisite-icon">
                            <i class="fas fa-mobile-alt"></i>
                        </div>
                        <div class="prerequisite-content">
                            <h4>UAE Pass Mobile App</h4>
                            <p>Staging mobile app should be installed on the developer's device for testing purposes.</p>
                        </div>
                    </div>
                    
                    <div class="prerequisite-item">
                        <div class="prerequisite-icon">
                            <i class="fas fa-key"></i>
                        </div>
                        <div class="prerequisite-content">
                            <h4>UAE Pass Credentials</h4>
                            <p>Valid Client ID and Client Secret from UAE Pass service provider registration.</p>
                        </div>
                    </div>
                    
                    <div class="prerequisite-item">
                        <div class="prerequisite-icon">
                            <i class="fas fa-globe"></i>
                        </div>
                        <div class="prerequisite-content">
                            <h4>Valid Redirect URI</h4>
                            <p>A properly configured callback URL that matches your UAE Pass application settings.</p>
                        </div>
                    </div>
                </div>

                <div class="callout callout-info">
                    <div class="callout-icon">
                        <i class="fas fa-info-circle"></i>
                    </div>
                    <div class="callout-content">
                        <strong>Reference:</strong> For detailed pre-requisites and onboarding process, visit the 
                        <a href="https://docs.uaepass.ae/feature-guides/authentication/web-application/pre-requisites" target="_blank" rel="noopener">official UAE Pass pre-requisites documentation</a>.
                    </div>
                </div>
            </section>

            <!-- Installation -->
            <section id="installation" class="docs-section">
                <h2>Installation</h2>
                <p>Install SuperUaePass using your preferred package manager:</p>
                
                <div class="code-tabs">
                    <div class="code-tabs-header">
                        <button class="tab-button active" data-tab="package-manager">Package Manager</button>
                        <button class="tab-button" data-tab="dotnet-cli">.NET CLI</button>
                        <button class="copy-button" onclick="copyCode('install-code')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <div class="code-tabs-content">
                        <div class="tab-content active" id="package-manager">
                            <pre id="install-code"><code>Install-Package SuperUaePass</code></pre>
                        </div>
                        <div class="tab-content" id="dotnet-cli">
                            <pre id="install-code-cli"><code>dotnet add package SuperUaePass</code></pre>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Quick Start -->
            <section id="quick-start" class="docs-section">
                <h2>Quick Start</h2>
                
                <h3>1. Configure Services</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>Program.cs</span>
                        <button class="copy-button" onclick="copyCode('program-cs')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="program-cs"><code>using SuperUaePass;

var builder = WebApplication.CreateBuilder(args);

// Add UAE Pass services
builder.Services.AddSuperUaePass(builder.Configuration);

var app = builder.Build();
app.Run();</code></pre>
                </div>

                <h3>2. Add Configuration</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>appsettings.json</span>
                        <button class="copy-button" onclick="copyCode('appsettings')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="appsettings"><code>{
  "SuperUaePass": {
    "BaseUrl": "https://stg-id.uaepass.ae",
    "ClientId": "your_client_id",
    "ClientSecret": "your_client_secret",
    "RedirectUri": "https://your-domain.com/callback",
    "Scope": "urn:uae:digitalid:profile:general",
    "Environment": "Staging",
    "ResponseType": "code",
    "EnableLogging": true
  }
}</code></pre>
                </div>

                <h3>3. Use in Controller</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>HomeController.cs</span>
                        <button class="copy-button" onclick="copyCode('controller')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="controller"><code>public class HomeController : Controller
{
    private readonly ISuperUaePassService _uaePassService;

    public HomeController(ISuperUaePassService uaePassService)
    {
        _uaePassService = uaePassService;
    }

    public IActionResult Login()
    {
        var state = Guid.NewGuid().ToString();
        var authUrl = _uaePassService.GenerateAuthorizationUrl(state);
        return Redirect(authUrl);
    }

    public async Task<IActionResult> Callback(string code, string state)
    {
        var tokenResponse = await _uaePassService.ExchangeCodeForTokenAsync(code);
        var userProfile = await _uaePassService.GetUserProfileAsync(tokenResponse.AccessToken);
        
        // Handle user authentication
        return RedirectToAction("Profile");
    }
}</code></pre>
                </div>
            </section>

            <!-- Configuration -->
            <section id="configuration" class="docs-section">
                <h2>Configuration</h2>
                <p>Configure SuperUaePass using the following options in your <code>appsettings.json</code>:</p>
                
                <div class="table-container">
                    <table class="docs-table">
                        <thead>
                            <tr>
                                <th>Property</th>
                                <th>Type</th>
                                <th>Default</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>BaseUrl</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td><code>https://stg-id.uaepass.ae</code></td>
                                <td>UAE Pass base URL</td>
                            </tr>
                            <tr>
                                <td><code>ClientId</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td>-</td>
                                <td>Your UAE Pass client ID</td>
                            </tr>
                            <tr>
                                <td><code>ClientSecret</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td>-</td>
                                <td>Your UAE Pass client secret</td>
                            </tr>
                            <tr>
                                <td><code>RedirectUri</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td>-</td>
                                <td>Your application's callback URL</td>
                            </tr>
                            <tr>
                                <td><code>Scope</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td><code>urn:uae:digitalid:profile:general</code></td>
                                <td>OAuth 2.0 scope</td>
                            </tr>
                            <tr>
                                <td><code>Environment</code></td>
                                <td><span class="type-badge">UaePassEnvironment</span></td>
                                <td><code>Staging</code></td>
                                <td>UAE Pass environment</td>
                            </tr>
                            <tr>
                                <td><code>ResponseType</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td><code>code</code></td>
                                <td>OAuth 2.0 response type</td>
                            </tr>
                            <tr>
                                <td><code>EnableLogging</code></td>
                                <td><span class="type-badge">bool</span></td>
                                <td><code>false</code></td>
                                <td>Enable detailed logging</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Authentication Flow -->
            <section id="authentication-flow" class="docs-section">
                <h2>Authentication Flow</h2>
                <p>The UAE Pass integration follows the standard OAuth 2.0 authorization code flow:</p>
                
                <div class="flow-diagram">
                    <div class="flow-step">
                        <div class="step-number">1</div>
                        <div class="step-content">
                            <h4>Authorization Request</h4>
                            <p>Redirect user to UAE Pass authorization endpoint</p>
                        </div>
                    </div>
                    <div class="flow-step">
                        <div class="step-number">2</div>
                        <div class="step-content">
                            <h4>User Authentication</h4>
                            <p>User authenticates with Emirates ID</p>
                        </div>
                    </div>
                    <div class="flow-step">
                        <div class="step-number">3</div>
                        <div class="step-content">
                            <h4>Authorization Code</h4>
                            <p>UAE Pass returns authorization code to your callback</p>
                        </div>
                    </div>
                    <div class="flow-step">
                        <div class="step-number">4</div>
                        <div class="step-content">
                            <h4>Token Exchange</h4>
                            <p>Exchange authorization code for access token</p>
                        </div>
                    </div>
                    <div class="flow-step">
                        <div class="step-number">5</div>
                        <div class="step-content">
                            <h4>User Profile</h4>
                            <p>Retrieve user information using access token</p>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Browser Authentication -->
            <section id="browser-auth" class="docs-section">
                <h2>Browser-Based Authentication</h2>
                <p>For browser-based authentication, the client secret is typically skipped, and the authorization endpoint includes specific parameters:</p>

                <div class="code-block">
                    <div class="code-header">
                        <span>Authorization URL Example</span>
                        <button class="copy-button" onclick="copyCode('auth-url')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="auth-url"><code>https://stg-id.uaepass.ae/idshub/authorize?
response_type=code&
client_id=sandbox_stage&
scope=urn:uae:digitalid:profile:general&
state=HnlHOJTkTb66Y5H&
redirect_uri=https://stg-selfcare.uaepass.ae&
acr_values=urn:safelayer:tws:policies:authentication:level:low</code></pre>
                </div>

                <div class="callout callout-warning">
                    <div class="callout-icon">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                    <div class="callout-content">
                        <strong>Important Notes:</strong>
                        <ul>
                            <li><code>acr_values</code> parameter is required for authentication level</li>
                            <li>Parameters should NOT be URL-encoded</li>
                            <li><code>nonce</code> parameter is optional</li>
                        </ul>
                    </div>
                </div>
            </section>

            <!-- Security -->
            <section id="security" class="docs-section">
                <h2>Security Considerations</h2>
                
                <h3>State Parameter</h3>
                <p>Always use a state parameter to prevent CSRF attacks:</p>
                <div class="code-block">
                    <div class="code-header">
                        <span>State Parameter Example</span>
                        <button class="copy-button" onclick="copyCode('state-example')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="state-example"><code>var state = Guid.NewGuid().ToString();
HttpContext.Session.SetString("UaePassState", state);

var authUrl = _uaePassService.GenerateAuthorizationUrl(state);</code></pre>
                </div>

                <h3>User Type Validation</h3>
                <p>Validate user types to ensure only authorized users can access your application:</p>
                <div class="code-block">
                    <div class="code-header">
                        <span>User Type Validation</span>
                        <button class="copy-button" onclick="copyCode('user-validation')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="user-validation"><code>var supportedTypes = new[] { "SOP1", "SOP2", "SOP3" };
if (!_uaePassService.IsUserTypeSupported(userProfile.UserType, supportedTypes))
{
    return BadRequest("User type not supported");
}</code></pre>
                </div>
            </section>

            <!-- Error Handling -->
            <section id="error-handling" class="docs-section">
                <h2>Error Handling</h2>
                <p>Implement proper error handling with correlation IDs:</p>
                <div class="code-block">
                    <div class="code-header">
                        <span>Error Handling Example</span>
                        <button class="copy-button" onclick="copyCode('error-handling')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="error-handling"><code>try
{
    var tokenResponse = await _uaePassService.ExchangeCodeForTokenAsync(code);
    var userProfile = await _uaePassService.GetUserProfileAsync(tokenResponse.AccessToken);
}
catch (Exception ex)
{
    _logger.LogError(ex, "UAE Pass authentication failed");
    return RedirectToAction("Error", new { error = "Authentication failed" });
}</code></pre>
                </div>
            </section>

            <!-- Service Interface -->
            <section id="service-interface" class="docs-section">
                <h2>ISuperUaePassService</h2>
                
                <div class="api-method">
                    <h3>GenerateAuthorizationUrl</h3>
                    <div class="method-signature">
                        <code>string GenerateAuthorizationUrl(string state, string? nonce = null, string? prompt = null, string? uiLocales = null)</code>
                    </div>
                    <p>Generates the UAE Pass authorization URL with the specified parameters.</p>
                </div>

                <div class="api-method">
                    <h3>ExchangeCodeForTokenAsync</h3>
                    <div class="method-signature">
                        <code>Task&lt;UaePassTokenResponse&gt; ExchangeCodeForTokenAsync(string code)</code>
                    </div>
                    <p>Exchanges the authorization code for an access token.</p>
                </div>

                <div class="api-method">
                    <h3>GetUserProfileAsync</h3>
                    <div class="method-signature">
                        <code>Task&lt;UaePassUserProfile&gt; GetUserProfileAsync(string accessToken)</code>
                    </div>
                    <p>Retrieves the user profile using the access token.</p>
                </div>

                <div class="api-method">
                    <h3>GenerateLogoutUrl</h3>
                    <div class="method-signature">
                        <code>string GenerateLogoutUrl(string? redirectUri = null)</code>
                    </div>
                    <p>Generates the UAE Pass logout URL.</p>
                </div>
            </section>

            <!-- User Profile -->
            <section id="user-profile" class="docs-section">
                <h2>UaePassUserProfile</h2>
                <p>The user profile contains the following properties from the UAE Pass response:</p>
                
                <div class="code-block">
                    <div class="code-header">
                        <span>User Profile Properties</span>
                        <button class="copy-button" onclick="copyCode('profile-properties')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="profile-properties"><code>public class UaePassUserProfile
{
    public string? Sub { get; set; }
    public string? Uuid { get; set; }
    public string? UserType { get; set; }
    public string? ProfileType { get; set; }
    public string? Idn { get; set; }
    public string? UnifiedID { get; set; }
    public string? IdType { get; set; }
    public string? Spuuid { get; set; }
    public string? FirstnameEN { get; set; }
    public string? LastnameEN { get; set; }
    public string? FullnameEN { get; set; }
    public string? FirstnameAR { get; set; }
    public string? LastnameAR { get; set; }
    public string? FullnameAR { get; set; }
    public string? TitleEN { get; set; }
    public string? TitleAR { get; set; }
    public string? Email { get; set; }
    public string? Mobile { get; set; }
    public string? Gender { get; set; }
    public string? NationalityEN { get; set; }
    public string? NationalityAR { get; set; }
    public string? Acr { get; set; }
    public string? Amr { get; set; }
    
    // Convenience properties
    public string? EmiratesId => Idn;
    public string? FirstName => FirstnameEN;
    public string? LastName => LastnameEN;
    public string? FullName => FullnameEN;
    public string? PhoneNumber => Mobile;
}</code></pre>
                </div>
            </section>

            <!-- Token Response -->
            <section id="token-response" class="docs-section">
                <h2>UaePassTokenResponse</h2>
                <p>The token response contains the OAuth 2.0 tokens returned by UAE Pass:</p>
                
                <div class="code-block">
                    <div class="code-header">
                        <span>Token Response Properties</span>
                        <button class="copy-button" onclick="copyCode('token-properties')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="token-properties"><code>public class UaePassTokenResponse
{
    public string? AccessToken { get; set; }
    public string? TokenType { get; set; }
    public int? ExpiresIn { get; set; }
    public string? RefreshToken { get; set; }
    public string? Scope { get; set; }
    public string? IdToken { get; set; }
}</code></pre>
                </div>
            </section>

            <!-- Configuration Options -->
            <section id="configuration-options" class="docs-section">
                <h2>Configuration Options</h2>
                <p>Detailed configuration options for the SuperUaePass library:</p>
                
                <div class="table-container">
                    <table class="docs-table">
                        <thead>
                            <tr>
                                <th>Property</th>
                                <th>Type</th>
                                <th>Required</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>BaseUrl</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td><span class="required-badge">Yes</span></td>
                                <td>UAE Pass base URL (staging or production)</td>
                            </tr>
                            <tr>
                                <td><code>ClientId</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td><span class="required-badge">Yes</span></td>
                                <td>Your UAE Pass client ID</td>
                            </tr>
                            <tr>
                                <td><code>ClientSecret</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td><span class="required-badge">Yes</span></td>
                                <td>Your UAE Pass client secret</td>
                            </tr>
                            <tr>
                                <td><code>RedirectUri</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td><span class="required-badge">Yes</span></td>
                                <td>Your application's callback URL</td>
                            </tr>
                            <tr>
                                <td><code>Scope</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td><span class="optional-badge">No</span></td>
                                <td>OAuth 2.0 scope (default: urn:uae:digitalid:profile:general)</td>
                            </tr>
                            <tr>
                                <td><code>Environment</code></td>
                                <td><span class="type-badge">UaePassEnvironment</span></td>
                                <td><span class="optional-badge">No</span></td>
                                <td>UAE Pass environment (default: Staging)</td>
                            </tr>
                            <tr>
                                <td><code>ResponseType</code></td>
                                <td><span class="type-badge">string</span></td>
                                <td><span class="optional-badge">No</span></td>
                                <td>OAuth 2.0 response type (default: code)</td>
                            </tr>
                            <tr>
                                <td><code>EnableLogging</code></td>
                                <td><span class="type-badge">bool</span></td>
                                <td><span class="optional-badge">No</span></td>
                                <td>Enable detailed logging (default: false)</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Basic Integration -->
            <section id="basic-integration" class="docs-section">
                <h2>Basic Integration</h2>
                <p>A complete example of integrating UAE Pass authentication in an ASP.NET Core application:</p>
                
                <div class="code-block">
                    <div class="code-header">
                        <span>Complete Integration Example</span>
                        <button class="copy-button" onclick="copyCode('complete-integration')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="complete-integration"><code>// Program.cs
using SuperUaePass;

var builder = WebApplication.CreateBuilder(args);

// Add UAE Pass services
builder.Services.AddSuperUaePass(builder.Configuration);

// Add session support
builder.Services.AddSession(options =>
{
    options.IdleTimeout = TimeSpan.FromMinutes(30);
    options.Cookie.HttpOnly = true;
    options.Cookie.IsEssential = true;
});

var app = builder.Build();

app.UseSession();
app.MapControllers();
app.Run();

// AuthController.cs
public class AuthController : Controller
{
    private readonly ISuperUaePassService _uaePassService;
    private readonly ILogger<AuthController> _logger;

    public AuthController(ISuperUaePassService uaePassService, ILogger<AuthController> logger)
    {
        _uaePassService = uaePassService;
        _logger = logger;
    }

    public IActionResult Login()
    {
        var state = Guid.NewGuid().ToString();
        HttpContext.Session.SetString("UaePassState", state);
        
        var authUrl = _uaePassService.GenerateAuthorizationUrl(state);
        return Redirect(authUrl);
    }

    public async Task<IActionResult> Callback(string code, string state)
    {
        try
        {
            // Validate state parameter
            var storedState = HttpContext.Session.GetString("UaePassState");
            if (string.IsNullOrEmpty(storedState) || storedState != state)
            {
                return BadRequest("Invalid state parameter");
            }

            // Exchange code for token
            var tokenResponse = await _uaePassService.ExchangeCodeForTokenAsync(code);
            
            // Get user profile
            var userProfile = await _uaePassService.GetUserProfileAsync(tokenResponse.AccessToken);
            
            // Store user information in session
            HttpContext.Session.SetString("IsAuthenticated", "true");
            HttpContext.Session.SetString("UserProfile", JsonSerializer.Serialize(userProfile));
            
            return RedirectToAction("Profile", "Home");
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "UAE Pass authentication failed");
            return RedirectToAction("Error", "Home", new { error = "Authentication failed" });
        }
    }

    public IActionResult Logout()
    {
        HttpContext.Session.Clear();
        var logoutUrl = _uaePassService.GenerateLogoutUrl();
        return Redirect(logoutUrl);
    }
}</code></pre>
                </div>
            </section>

            <!-- Advanced Usage -->
            <section id="advanced-usage" class="docs-section">
                <h2>Advanced Usage</h2>
                <p>Advanced features and best practices for UAE Pass integration:</p>
                
                <h3>Custom Authorization Parameters</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>Custom Authorization</span>
                        <button class="copy-button" onclick="copyCode('custom-auth')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="custom-auth"><code>// Generate authorization URL with custom parameters
var state = Guid.NewGuid().ToString();
var nonce = Guid.NewGuid().ToString();

var authUrl = _uaePassService.GenerateAuthorizationUrl(
    state: state,
    nonce: nonce,
    prompt: "login",
    uiLocales: "en"
);

// Store nonce for validation
HttpContext.Session.SetString("UaePassNonce", nonce);</code></pre>
                </div>

                <h3>User Type Validation</h3>
                <div class="code-block">
                    <div class="code-header">
                        <span>User Type Validation</span>
                        <button class="copy-button" onclick="copyCode('user-type-validation')">
                            <i class="fas fa-copy"></i>
                        </button>
                    </div>
                    <pre id="user-type-validation"><code>// Validate user type after authentication
var supportedUserTypes = new[] { "SOP1", "SOP2", "SOP3" };

if (!supportedUserTypes.Contains(userProfile.UserType))
{
    _logger.LogWarning("Unsupported user type: {UserType}", userProfile.UserType);
    return BadRequest("User type not supported");
}

// Check authentication level
if (userProfile.Acr != "urn:safelayer:tws:policies:authentication:level:low")
{
    _logger.LogWarning("Insufficient authentication level: {Acr}", userProfile.Acr);
    return BadRequest("Insufficient authentication level");
}</code></pre>
                </div>
            </section>
        </div>


    </main>
</div>

<!-- Feedback Widget -->
<div class="feedback-widget" id="feedbackWidget">
    <div class="feedback-content">
        <h4>Was this helpful?</h4>
        <div class="feedback-buttons">
            <button class="feedback-btn" data-feedback="positive">
                <i class="fas fa-thumbs-up"></i>
                Yes
            </button>
            <button class="feedback-btn" data-feedback="negative">
                <i class="fas fa-thumbs-down"></i>
                No
            </button>
        </div>
        <div class="feedback-form" id="feedbackForm" style="display: none;">
            <textarea placeholder="Tell us more..." rows="3"></textarea>
            <button class="feedback-submit">Submit</button>
        </div>
    </div>
</div>



@section Scripts {
    <script src="~/js/docs.js" asp-append-version="true"></script>
}
